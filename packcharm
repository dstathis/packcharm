#!/usr/bin/env python3

import argparse
import pathlib
import shutil
import subprocess
import sys
import time

MANIFEST_YAML = """analysis:
  attributes:
  - name: language
    result: python
  - name: framework
    result: operator
bases:
- architectures:
  - amd64
  channel: '20.04'
  name: ubuntu
charmcraft-started-at: '2022-03-23T23:38:04.944491Z'
charmcraft-version: 1.5.0
"""

DISPATCH="""#!/bin/sh

# Customized version of the dispatch script that adds "." to PYTHONPATH
# so that the charm libraries in /src/main/charm_libs can also be loaded
JUJU_DISPATCH_PATH="${JUJU_DISPATCH_PATH:-$0}" PYTHONPATH=lib:venv:. ./src/charm.py
"""


def run(cmd, shell=False, fail_ok=False):
    if not shell:
        cmd = cmd.split()
    if fail_ok:
        subprocess.call(cmd, shell=shell)
    else:
        subprocess.check_call(cmd, shell=shell)


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--clean', action='store_true', help='Rebuild the cache directory')
    parser.add_argument('-o', '--output', default='./my.charm',
        type=pathlib.Path, help='Path of charm file to create')
    return parser.parse_args()


def main():
    args = get_args()
    if not pathlib.Path('./metadata.yaml').is_file():
        sys.stderr.write('Please run from inside a charm directory\n')
        sys.stderr.flush()
        sys.exit(1)
    home = pathlib.Path.home()
    wd = pathlib.Path.cwd()
    cache = home / f'.packcharm/{wd.name}'
    if args.clean:
        shutil.rmtree(cache)
    cache.mkdir(parents=True, exist_ok=True)
    if not (cache / 'venv').exists():
        run(f'virtualenv {cache / "venv"}')
    tempdir = pathlib.Path(f'./packcharm-{time.time()}')
    tempdir.mkdir()
    run(f'cp -r ./* {tempdir}/', shell=True, fail_ok=True)
    with (tempdir / 'manifest.yaml').open('w') as f:
        f.write(MANIFEST_YAML)
    with (tempdir / 'dispatch').open('w') as f:
        f.write(DISPATCH)
    run(f'chmod +x {tempdir}/dispatch')
    run(f'. {cache / "venv/bin/activate"}; pip install -r {tempdir}/requirements.txt', shell=True)
    (tempdir / 'venv').mkdir()
    run(f'cp -r {cache}/venv/lib/python3.*/site-packages/* {tempdir}/venv/', shell=True)
    run(f'cd {tempdir};zip -1 -r {args.output.resolve()} ./*;cd {wd}', shell=True)
    shutil.rmtree(tempdir)

if __name__ == '__main__':
    main()
